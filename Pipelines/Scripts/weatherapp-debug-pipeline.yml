trigger:
- none

pool:
  name: Default
  vmImage: chaitanya

parameters:
  - name: environment
    displayName: Environment Select
    type: string
    default: Dev
    values:
      - Dev
      - Qa
      - Uat
      - Prod
stages:
  - stage: build
    displayName: Build
    jobs:
      - job: "BuildArtifact"
        displayName: "Build Artifact"
        steps:
          - task: ArchiveFiles@2
            displayName: "Archive Weather App"
            inputs:
              rootFolderOrFile: 'Source/WeatherApp'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/App/weatherapp.zip'
              replaceExistingArchive: true
          - task: CopyFiles@2
            displayName: "Copying Pipeline Scripts into artifact folder"
            inputs:
              SourceFolder: 'Pipelines/Scripits'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ARMtemplates'
          - task: PublishBuildArtifacts@1
            displayName: "Creating a drop folder for artifact"
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
  - stage: "InfraDeployment"
    displayName: "Deploy : Infra-${{ parameters.environment }}"
    dependsOn: build
    jobs:
      - deployment: "DeployInfra"
        displayName: "Deploy Infra"
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
             steps:
               - task: DownloadBuildArtifacts@1
                 inputs:
                   buildType: 'current'
                   downloadType: 'single'
                   artifactName: 'drop'
                   downloadPath: '$(System.ArtifactsDirectory)/download'
               - task: PowerShell@2
                 inputs:
                   targetType: 'inline'
                   script: |
                     Get-ChildItem $(System.ArtifactsDirectory)/download
  - stage: "AppDeploy"
    displayName: "Deploy : App-${{ parameters.environment }}"
    dependsOn: InfraDeployment
    jobs:
      - deployment: "DeployApp"
        displayName: "Deploy App"
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
             steps:
               - task: DownloadBuildArtifacts@1
                 inputs:
                   buildType: 'current'
                   downloadType: 'single'
                   artifactName: 'drop'
                   downloadPath: '$(System.ArtifactsDirectory)/download'
               - task: PowerShell@2
                 inputs:
                   targetType: 'inline'
                   script: |
                     Get-ChildItem $(System.ArtifactsDirectory)/download
  - stage: "DevPost"
    displayName: "Deploy : Post Deployment-${{ parameters.environment }}"
    dependsOn: AppDeploy
    jobs:
      - deployment: "DeployPost"
        displayName: "Deploy Post"
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
             steps:
               - task: DownloadBuildArtifacts@1
                 inputs:
                   buildType: 'current'
                   downloadType: 'single'
                   artifactName: 'drop'
                   downloadPath: '$(System.ArtifactsDirectory)/download'
               - task: PowerShell@2
                 inputs:
                   targetType: 'inline'
                   script: |
                     Get-ChildItem $(System.ArtifactsDirectory)/download