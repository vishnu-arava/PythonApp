# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: vishnupool
  vmImage: vishnuagent

stages:
  - stage: "Build"
    displayName: "Build WeatherApp"
    jobs:
      - job: "BuildWeatherapp"
        displayName: 'Build Weatherapp'
        pool: Satyam
        steps: 
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: 'source/weatherapp'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/Apps/weatherapp.zip'
              replaceExistingArchive: true
          
          - task: CopyFiles@2
            displayName: "Copy Infra files"
            inputs:
              SourceFolder: 'Pipelines/Infra/ARMTemplates'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/InfraArm'
          
          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifacts"
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
  
  - stage: "UATInfra"
    displayName: "UAT Deploy: Infra"
    dependsOn: Build
    jobs:
      - deployment: "DeployInfra"
        displayName: 'Deploy Infra'
        pool: Satyam
        environment: UAT
        strategy:
          runOnce:
            deploy:
              steps: 
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                  
                - task: PowerShell@2
                  inputs:
                    targetType: 'inline'
                    script: |
                      # Write your PowerShell commands here.
                      
                      Get-ChildItem $(System.ArtifactsDirectory)/downloads

  - stage: "UATApp"
    displayName: "UAT Deploy: Weather App"
    dependsOn: UATInfra
    jobs:
      - deployment: "DeployApp"
        displayName: 'Deploy App'
        pool: Satyam
        environment: UAT
        strategy:
          runOnce:
            deploy:
              steps: 
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                  
                - task: PowerShell@2
                  inputs:
                    targetType: 'inline'
                    script: |
                      # Write your PowerShell commands here.
                      
                      Get-ChildItem $(System.ArtifactsDirectory)/downloads

  - stage: "PRODInfra"
    displayName: "PROD Deploy: Infra"
    dependsOn: Build
    jobs:
    
      - deployment: "DeployInfra"
        displayName: 'Deploy Infra'
        pool: Satyam
        environment: PROD
        strategy:
          runOnce:
            deploy:
              steps: 
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                  
                - task: PowerShell@2
                  inputs:
                    targetType: 'inline'
                    script: |
                      # Write your PowerShell commands here.
                      
                      Get-ChildItem $(System.ArtifactsDirectory)/downloads
      
  - stage: "PRODApp"
    displayName: "PROD Deploy: Weather App"
    dependsOn: PRODInfra
    jobs:
      - deployment: "DeployApp"
        displayName: 'Deploy App'
        pool: Satyam
        environment: PROD
        strategy:
          runOnce:
            deploy:
              steps: 
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                  
                - task: PowerShell@2
                  inputs:
                    targetType: 'inline'
                    script: |
                      # Write your PowerShell commands here.
                      
                      Get-ChildItem $(System.ArtifactsDirectory)/downloads
