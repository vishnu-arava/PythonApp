trigger:
- none

pool:
  name: vishnupool
  vmImage: vishnuagent

variables:
  - group: MyVarGroup

parameters:  
  - name: vishnupool
    type: string
    default: $(soemagent)
    values:
      - $(soemagent)
      
  - name: environment
    type: string
    default: dev
    values:
      - dev
      - qa
      - uat
      - prod
stages:
  - stage: "Build"
    displayName: "Building WeatherApp"
    jobs:
      - job: "BuildWeathetherApp"
        displayName: "Build WeathetherApp"
        steps:
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: 'Source/WeatherApp'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/Apps/WeatherApp.zip'
          - task: CopyFiles@2
            inputs:
              SourceFolder: 'Pipelines/Infra/ARMTemplates'
              Contents: '**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/ARMInfra'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'


  - stage: "DevInfra"
    displayName: "Dev Infra"
    dependsOn: Build
    jobs:
      - deployment: "BuildDevInfra"
        displayName: "Build Dev Infra"
        environment: Dev
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                
                - task: AzureResourceManagerTemplateDeployment@3
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                    subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'RG-VA'
                    location: 'South Central US'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/Appservice/appservice.json'
                    csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/Appservice/parameters_dev.json'
                    deploymentMode: 'Incremental'
                
                # - task: PowerShell@2
                #   inputs:
                #     targetType: 'inline'
                #     script: |
                #       # Write your PowerShell commands here
                #       Get-ChildItem -Recurse $(System.ArtifactsDirectory)

                # - task: AzureResourceManagerTemplateDeployment@3
                #   inputs:
                #     deploymentScope: 'Resource Group'
                #     azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                #     subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                #     action: 'Create Or Update Resource Group'
                #     resourceGroupName: 'RG-VA'
                #     location: 'Central US'
                #     templateLocation: 'Linked artifact'
                #     csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/vm.json'
                #     csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/parameters_dev.json'
                #     deploymentMode: 'Incremental'
                #     deploymentOutputs: 'deploymentOutputs'
                
                # - task: AzureResourceManagerTemplateDeployment@3
                #   inputs:
                #     deploymentScope: 'Resource Group'
                #     azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                #     subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                #     action: 'Create Or Update Resource Group'
                #     resourceGroupName: 'RG-VA'
                #     location: 'Central US'
                #     templateLocation: 'Linked artifact'
                #     csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/Appservice/appservice.json'
                #     csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/Appservice/parameters_dev.json'
                #     deploymentMode: 'Incremental'
                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: |
                #       $resourceGroupName = "$(resourceGroupName)",
                #       $logAnalyticsWorkspaceName = "$(logAnalyticsWorkspaceName)",
                #       $location = "$(location)",
                #       $appServiceName = "$(appServiceName)",
                #       $appInsightsName = "$(appInsightsName)"
                #       az monitor log-analytics workspace create --resource-group $resourceGroupName --workspace-name $logAnalyticsWorkspaceName --location $location

                #       # Create Application Insights resource linked to the Log Analytics Workspace
                #       $workspaceId = az monitor log-analytics workspace show --resource-group $resourceGroupName --workspace-name $logAnalyticsWorkspaceName --query id --output tsv

                #       az monitor app-insights component create --app $appInsightsName --location $location --resource-group $resourceGroupName --workspace $workspaceId

                #       # Get Instrumentation Key
                #       $instrumentationKey = az monitor app-insights component show --app $appInsightsName --resource-group $resourceGroupName --query instrumentationKey --output tsv

                #       # Configure App Service to use Application Insights
                #       az webapp config appsettings set --resource-group $resourceGroupName --name $appServiceName --settings APPINSIGHTS_INSTRUMENTATIONKEY=$instrumentationKey
                #     arguments: '-appServiceName "vishnuAppServiceDEV" -logAnalyticsWorkspaceName "vishnu-logs-workspace-dev" -appInsightsName "vishnu-insights-dev" -location "canadacentral" -resourceGroupName "RG-VA"'

                # - task: AzureResourceManagerTemplateDeployment@3
                #   inputs:
                #     deploymentScope: 'Resource Group'
                #     azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                #     subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                #     action: 'Create Or Update Resource Group'
                #     resourceGroupName: 'RG-VA'
                #     location: 'Central US'
                #     templateLocation: 'Linked artifact'
                #     csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/sql/sqlServerDb.json'
                #     csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/sql/parameters_dev.json'
                #     deploymentMode: 'Incremental'
                #     overrideParameters: |
                #       - adminPassword $(adminPassword)

                # - task: AzureResourceManagerTemplateDeployment@3
                #   inputs:
                #     deploymentScope: 'Resource Group'
                #     azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                #     subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                #     action: 'Create Or Update Resource Group'
                #     resourceGroupName: 'RG-VA'
                #     location: 'Central US'
                #     templateLocation: 'Linked artifact'
                #     csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/keyvaults/keyvault.json'
                #     csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/keyvaults/parameters_dev.json'
                #     deploymentMode: 'Incremental'

                # - task: AzureResourceManagerTemplateDeployment@3
                #   inputs:
                #     deploymentScope: 'Resource Group'
                #     azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                #     subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                #     action: 'Create Or Update Resource Group'
                #     resourceGroupName: 'RG-VA'
                #     location: 'Central US'
                #     templateLocation: 'Linked artifact'
                #     csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/storage/storage.json'
                #     csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/storage/parameters_dev.json'
                #     deploymentMode: 'Incremental'

                # - task: PowerShell@2
                #   inputs:
                #     targetType: 'inline'
                #     script: |
                #       # Convert the deployment outputs from JSON
                #       $outputs = ConvertFrom-Json -InputObject '$(deploymentOutputs)'
                      
                #       # Extract the public IP address from the outputs
                #       $vmusername = $outputs.vmusername.value
                #       $vmname = $outputs.vmname.value
                      
                #       # Display the public IP address
                #       Write-Output "VM Administrator Name is: $vmusername"
                #       Write-Output "VM Name is: $vmname"
                      
                #       # Set the public IP address as a pipeline variable
                #       Write-Host "##vso[task.setvariable variable=vmusername]$vmusername"
                #       Write-Host "##vso[task.setvariable variable=vmname]$vmname"

                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: |
                #       $publicIp = az vm show -d -g RG-VA -n $(vmname) --query "publicIps" -o tsv
                #       Write-Host "##vso[task.setvariable variable=varPublicIp;]$publicIp"
                #       Write-Host "Fetched PublicIP is : $publicIp"
                #       Write-Host "Vm name is : $(vmname)"
                #     arguments: '-rgGroup RG-VA -vmName $(vmname)'

                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: 'Write-Host "PublicIP is : $(varpublicIP)"'

  - stage: "DevAppDeploy"
    displayName: "Dev App Deploy"
    dependsOn: DevInfra
    jobs:
      - deployment: "DevAppDeploy"
        displayName: "Dev App: WeatherApp"
        environment: Dev
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                # - task: CopyFilesOverSSH@0
                #   inputs:
                #     sshEndpoint: 'weatherappdev-vm-satyamcloud'
                #     sourceFolder: '$(System.ArtifactsDirectory)/downloads/Source/WeatherApp'
                #     contents: '**'
                #     targetFolder: '/home/Weatherapp/'
                #     readyTimeout: '20000'

                # - task: SSH@0
                #   inputs:
                #     sshEndpoint: 'weatherappdev-vm-satyamcloud'
                #     runOptions: 'inline'
                #     inline: |
                #       - task: SSH@0
                #         inputs:
                #           sshEndpoint: 'Weatherappssh'  # Replace with your SSH service connection
                #           runOptions: 'inline'
                #           inline: |
                #             echo 'Vishnusahi58206@*' | sudo -S bash -c 'apt update -y && apt install python3 -y && apt install python3-pip -y && apt install zip -y && apt install python3-venv && apt install pkg-config && apt install libmysqlclient-dev'
                #             cd /home/Weatherapp
                #             unzip -o weatherapp.zip
                #             cd weatherapp
                #             pip install -r requirements.txt
                #             nohup python3 app.py &
                #     readyTimeout: '20000'
      
  - stage: "QaInfra"
    displayName: "Qa Infra"
    dependsOn: Build
    jobs:
      - deployment: "BuildQaInfra"
        displayName: "Build Qa Infra"
        environment: Qa
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                
                - task: PowerShell@2
                  inputs:
                    targetType: 'inline'
                    script: |
                      # Write your PowerShell commands here.
                      
                      Get-ChildItem -Recurse $(System.ArtifactsDirectory)
                # - task: AzureResourceManagerTemplateDeployment@3
                #   inputs:
                #     deploymentScope: 'Resource Group'
                #     azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                #     subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                #     action: 'Create Or Update Resource Group'
                #     resourceGroupName: 'RG-QA'
                #     location: 'East US 2'
                #     templateLocation: 'Linked artifact'
                #     csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/vm.json'
                #     csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/parameters_qa.json'
                #     deploymentMode: 'Incremental'
                #     deploymentOutputs: 'deploymentOutputs'
                - task: AzureResourceManagerTemplateDeployment@3
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                    subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'RG-QA'
                    location: 'East US 2'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/storage/storage.json'
                    csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/storage/parameters_qa.json'
                    deploymentMode: 'Incremental'
                    
                # - task: PowerShell@2
                #   inputs:
                #     targetType: 'inline'
                #     script: |
                #       # Convert the deployment outputs from JSON
                #       $outputs = ConvertFrom-Json -InputObject '$(deploymentOutputs)'
                      
                #       # Extract the public IP address from the outputs
                #       $vmusername = $outputs.vmusername.value
                #       $vmname = $outputs.vmname.value
                      
                #       # Display the public IP address
                #       Write-Output "VM Administrator Name is: $vmusername"
                #       Write-Output "VM Name is: $vmname"
                      
                #       # Set the public IP address as a pipeline variable
                #       Write-Host "##vso[task.setvariable variable=vmusername]$vmusername"
                #       Write-Host "##vso[task.setvariable variable=vmname]$vmname"

                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: |
                #       $publicIp = az vm show -d -g RG-QA -n $(vmname) --query "publicIps" -o tsv
                #       Write-Host "##vso[task.setvariable variable=varPublicIp;]$publicIp"
                #       Write-Host "Fetched PublicIP is : $publicIp"
                #       Write-Host "Vm name is : $(vmname)"
                #     arguments: '-rgGroup RG-QA -vmName $(vmname)'

                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: 'Write-Host "PublicIP is : $(varpublicIP)"'
                    
  - stage: "QaAppDeploy"
    displayName: "Qa App Deploy"
    dependsOn: QaInfra
    jobs:
      - deployment: "QaAppDeploy"
        displayName: "Qa App: WeatherApp"
        environment: Qa
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'

  - stage: "UATInfra"
    displayName: "UAT Infra"
    dependsOn: Build
    jobs:
      - deployment: "BuildUATfInfra"
        displayName: "Build UAT Infra"
        environment: UAT
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'
                
                - task: PowerShell@2
                  inputs:
                    targetType: 'inline'
                    script: |
                      # Write your PowerShell commands here.
                      
                      Get-ChildItem -Recurse $(System.ArtifactsDirectory)
                - task: AzureResourceManagerTemplateDeployment@3
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                    subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'RG-UAT'
                    location: 'East US'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/vm.json'
                    csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/parameters_uat.json'
                    deploymentMode: 'Incremental'
                    deploymentOutputs: 'deploymentOutputs'
                - task: AzureResourceManagerTemplateDeployment@3
                  inputs:
                    deploymentScope: 'Resource Group'
                    azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
                    subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'RG-UAT'
                    location: 'East US'
                    templateLocation: 'Linked artifact'
                    csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/sql/sqlServerDb.json'
                    csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/sql/parameters_uat.json'
                    deploymentMode: 'Incremental'

                # - task: PowerShell@2
                #   inputs:
                #     targetType: 'inline'
                #     script: |
                #       # Convert the deployment outputs from JSON
                #       $outputs = ConvertFrom-Json -InputObject '$(deploymentOutputs)'
                      
                #       # Extract the public IP address from the outputs
                #       $vmusername = $outputs.vmusername.value
                #       $vmname = $outputs.vmname.value
                      
                #       # Display the public IP address
                #       Write-Output "VM Administrator Name is: $vmusername"
                #       Write-Output "VM Name is: $vmname"
                      
                #       # Set the public IP address as a pipeline variable
                #       Write-Host "##vso[task.setvariable variable=vmusername]$vmusername"
                #       Write-Host "##vso[task.setvariable variable=vmname]$vmname"

                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: |
                #       $publicIp = az vm show -d -g RG-UAT -n $(vmname) --query "publicIps" -o tsv
                #       Write-Host "##vso[task.setvariable variable=varPublicIp;]$publicIp"
                #       Write-Host "Fetched PublicIP is : $publicIp"
                #       Write-Host "Vm name is : $(vmname)"
                #     arguments: '-rgGroup RG-UAT -vmName $(vmname)'
                
                # - task: AzureCLI@2
                #   inputs:
                #     azureSubscription: 'vishnuSubscriptionServiceConnection'
                #     scriptType: 'ps'
                #     scriptLocation: 'inlineScript'
                #     inlineScript: 'Write-Host "PublicIP is : $(varpublicIP)"'

  - stage: "UATAppDeploy"
    displayName: "UAT App Deploy"
    dependsOn: UATInfra
    jobs:
      - deployment: "UATAppDeploy"
        displayName: "UAT App: WeatherApp"
        environment: UAT
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)/downloads'

  # - stage: "PRODInfra"
  #   displayName: "PROD Infra"
  #   dependsOn: Build
  #   jobs:
  #     - deployment: "BuildPRODInfra"
  #       displayName: "Build PROD Infra"
  #       environment: PROD
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - task: DownloadBuildArtifacts@1
  #                 inputs:
  #                   buildType: 'current'
  #                   downloadType: 'single'
  #                   artifactName: 'drop'
  #                   downloadPath: '$(System.ArtifactsDirectory)/downloads'
                
  #               - task: PowerShell@2
  #                 inputs:
  #                   targetType: 'inline'
  #                   script: |
  #                     # Write your PowerShell commands here.
                      
  #                     Get-ChildItem -Recurse $(System.ArtifactsDirectory)

  #               - task: AzureResourceManagerTemplateDeployment@3
  #                 inputs:
  #                   deploymentScope: 'Resource Group'
  #                   azureResourceManagerConnection: 'vishnuSubscriptionServiceConnection'
  #                   subscriptionId: '2dc383a6-eed6-4aa2-a955-b4fffa7da912'
  #                   action: 'Create Or Update Resource Group'
  #                   resourceGroupName: 'RG-PROD'
  #                   location: 'East US 2'
  #                   templateLocation: 'Linked artifact'
  #                   csmFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/vm.json'
  #                   csmParametersFile: '$(System.ArtifactsDirectory)/downloads/drop/ARMInfra/vm/parameters_prod.json'
  #                   deploymentMode: 'Incremental'
  #                   deploymentOutputs: 'deploymentOutputs'

  #               - task: PowerShell@2
  #                 inputs:
  #                   targetType: 'inline'
  #                   script: |
  #                     # Convert the deployment outputs from JSON
  #                     $outputs = ConvertFrom-Json -InputObject '$(deploymentOutputs)'
                      
  #                     # Extract the public IP address from the outputs
  #                     $vmusername = $outputs.vmusername.value
  #                     $vmname = $outputs.vmname.value
                      
  #                     # Display the public IP address
  #                     Write-Output "VM Administrator Name is: $vmusername"
  #                     Write-Output "VM Name is: $vmname"
                      
  #                     # Set the public IP address as a pipeline variable
  #                     Write-Host "##vso[task.setvariable variable=vmusername]$vmusername"
  #                     Write-Host "##vso[task.setvariable variable=vmname]$vmname"

  #               - task: AzureCLI@2
  #                 inputs:
  #                   azureSubscription: 'vishnuSubscriptionServiceConnection'
  #                   scriptType: 'ps'
  #                   scriptLocation: 'inlineScript'
  #                   inlineScript: |
  #                     $publicIp = az vm show -d -g RG-PROD -n $(vmname) --query "publicIps" -o tsv
  #                     Write-Host "##vso[task.setvariable variable=varPublicIp;]$publicIp"
  #                     Write-Host "Fetched PublicIP is : $publicIp"
  #                     Write-Host "Vm name is : $(vmname)"
  #                   arguments: '-rgGroup RG-PROD -vmName $(vmname)'

  #               - task: AzureCLI@2
  #                 inputs:
  #                   azureSubscription: 'vishnuSubscriptionServiceConnection'
  #                   scriptType: 'ps'
  #                   scriptLocation: 'inlineScript'
  #                   inlineScript: 'Write-Host "PublicIP is : $(varpublicIP)"'
                    
  # - stage: "PRODAppDeploy"
  #   displayName: "PROD App Deploy"
  #   dependsOn: PRODInfra
  #   jobs:
  #     - deployment: "PRODAppDeploy"
  #       displayName: "PROD App: WeatherApp"
  #       environment: PROD
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - task: DownloadBuildArtifacts@1
  #                 inputs:
  #                   buildType: 'current'
  #                   downloadType: 'single'
  #                   artifactName: 'drop'
  #                   downloadPath: '$(System.ArtifactsDirectory)/downloads'