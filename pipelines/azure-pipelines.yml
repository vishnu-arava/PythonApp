trigger:
  branches:
    include:
      - vishnu  # Run pipeline on commits to the vishnu branch

pool:
  vmImage: 'ubuntu-latest'  # Use an Ubuntu-based build agent

steps:
- checkout: self  # Check out the repository containing the pipeline definition

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'  # Specify the Python version to be set up on the build agent

- script: |
    python -m pip install --upgrade pip  # Upgrade pip
    python -m venv $(Build.SourcesDirectory)/Source/WeatherApp/venv  # Create a virtual environment
    source $(Build.SourcesDirectory)/Source/WeatherApp/venv/bin/activate  # Activate the virtual environment
    pip install -r $(Build.SourcesDirectory)/Source/WeatherApp/requirements.txt  # Install dependencies in the virtual environment
  displayName: 'Install dependencies'

- script: |
    apt-get update -y
    apt-get install zip -y  # Ensure zip utility is installed on the build agent
    cd $(Build.SourcesDirectory)/Source/WeatherApp
    pwd  # Print current working directory (should be Source/WeatherApp)
    zip -r $(Build.ArtifactStagingDirectory)/weatherapp.zip . -x "venv/*"  # Create a ZIP archive of the application excluding the virtual environment
    cd $(Build.SourcesDirectory)
    pwd  # Print current working directory (should be the root of the repository)
    zip -r $(Build.ArtifactStagingDirectory)/weatherapp.zip Source/WeatherApp/venv  # Add the virtual environment to the ZIP file
  displayName: 'Create ZIP Archive'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'AppServiceConnection-va'  # Name of your Azure service connection
    appName: 'webappservicepython'  # Name of your Azure Web App (without .azurewebsites.net)
    package: '$(Build.ArtifactStagingDirectory)/weatherapp.zip'  # Path to the ZIP file to deploy
    startUpCommand: 'source venv/bin/activate && python run.py'  # Specify the startup command for your Python application
  displayName: 'Deploy to Azure Web App'
